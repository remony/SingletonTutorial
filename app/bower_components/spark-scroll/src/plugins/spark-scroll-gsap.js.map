{"version":3,"sources":["plugins/spark-scroll-gsap.coffee"],"names":[],"mappings":"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","file":"plugins/spark-scroll-gsap.js","sourceRoot":"/source/","sourcesContent":["class Actor\n  constructor: (@tl, @context) ->\n    @frames = []\n    @frameHash = {}\n    @normalizedFrames = []\n\n  normalizeFrames: ->\n    @normalizedFrames = _.sortBy(_.cloneDeep(@frames), 'scrollY')\n\n    # frame inheritance\n    _.forEach @normalizedFrames, (frame, index, arr) ->  # @todo: regular for loop would be faster?\n      _.defaults(frame.anims, arr[index-1].anims) if index\n    @\n\n  keyframe: (scrollY, anims, ease) ->\n    frame =\n      scrollY: scrollY\n      anims: anims\n      ease: ease\n    @frames.push(frame)\n    @frameHash[scrollY] = frame\n    @\n    \n  buildTimeline: ->\n    @tl.clear()\n    _.forEach @normalizedFrames, (frame, index, arr) =>\n      if index\n        prevFrame = arr[index-1]\n\n        # for easing, instead of this:\n        # @tl.fromTo(@context, frame.scrollY - prevFrame.scrollY, prevFrame.anims, frame.anims, prevFrame.scrollY)\n\n        # ...do this:\n        # creating a new fromTo for each property to support per-property easing\n        # this seems pretty inefficient\n        duration = frame.scrollY - prevFrame.scrollY\n        for k,v of frame.anims\n          a = {}\n          pa = {}\n          a[k] = v\n          a.ease = frame.ease[k]\n          pa[k] = prevFrame.anims[k]\n          @tl.fromTo(@context, duration, pa, a, prevFrame.scrollY)\n          @tl.pause()\n      return true\n    @\n    \n  finishedAddingKeyframes: ->\n    @normalizeFrames()\n    @buildTimeline()\n    @\n\n  moveKeyframe: (oldPos, newPos) ->\n    frame = @frameHash[oldPos]\n    @frameHash[newPos] = frame\n    frame.scrollY = newPos\n    delete @frameHash[oldPos]\n    @normalizeFrames()\n    @buildTimeline()  # todo: use change detection to optimize ?\n    @\n\n  removeAllKeyframes: ->\n    @tl.clear()\n    @frames = []\n    @\n\n\nclass GSAPAnimator\n  constructor: ->\n    @tl = new TimelineLite({useFrames:true})\n\n  addActor: (options) ->\n    @context = options.context\n    @actor = new Actor(@tl, @context)\n\n  update: (pos) ->\n    @tl.seek(pos, false) if pos>=0 # It balks at negative pos values\n    @\n\n\nangular.module('gilbox.sparkScroll').factory 'sparkAnimator', ->\n  instance: ->\n    new GSAPAnimator()"]}