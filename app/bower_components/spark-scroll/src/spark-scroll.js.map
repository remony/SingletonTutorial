{"version":3,"sources":["spark-scroll.coffee"],"names":[],"mappings":"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","file":"spark-scroll.js","sourceRoot":"/source/","sourcesContent":["angular.module('gilbox.sparkScroll', [])\n\n# sparkAnimator can be overridden to use any animation engine\n# so long as the sparkAnimator service supports the following Rekapi-like\n# interface:\n#\n# actor = sparkAnimator.addActor({ context: <dom element> })  # works just like Rekapi.addActor(...)\n# actor.keyframe(...)\n# actor.moveKeyframe(...)\n# actor.removeAllKeyframes(...)\n# sparkAnimator.update(...)       # works just like Rekapi.update(...)\n#\n# See the Rekapi docs for implementation details   http://rekapi.com/dist/doc/\n.factory 'sparkAnimator', ['$document', ($document) ->\n  instance: ->\n    Rekapi && new Rekapi($document[0].body)\n]\n\n.constant 'sparkFormulas', {\n\n  # formulas are always in the format: variable or variable<offset>\n  #   (note that you cannot combine formula variables)\n  # for example:\n  #\n  #      topTop+40\n  #      topBottom-120\n  #      topCenter\n  #      centerTop\n  #      centerCenter-111\n  #\n  # are valid formulas. (topTop40 is valid as well but less intuitive)\n  #\n  # each property of the sparkFormulas object is a formula variable\n\n  # top of the element hits the top of the viewport\n  topTop: `function topTop(element, container, rect, containerRect, offset) { return ~~(rect.top - containerRect.top + offset) }`\n\n  # top of the element hits the center of the viewport\n  topCenter: `function topCenter(element, container, rect, containerRect, offset) { return ~~(rect.top - containerRect.top - container.clientHeight/2 + offset) }`\n\n  # top of the element hits the bottom of the viewport\n  topBottom: `function topBottom(element, container, rect, containerRect, offset) {  return ~~(rect.top - containerRect.top - container.clientHeight + offset) }`\n\n  # center of the element hits the top of the viewport\n  centerTop: `function centerTop(element, container, rect, containerRect, offset) { return ~~(rect.top + rect.height/2 - containerRect.top + offset) }`\n\n  # center of the element hits the center of the viewport\n  centerCenter: `function centerCenter(element, container, rect, containerRect, offset) { return ~~(rect.top + rect.height/2 - containerRect.top - container.clientHeight/2 + offset) }`\n\n  # center of the element hits the bottom of the viewport\n  centerBottom: `function centerBottom(element, container, rect, containerRect, offset) {  return ~~(rect.top + rect.height/2 - containerRect.top - container.clientHeight + offset) }`\n\n  # bottom of the element hits the top of the viewport\n  bottomTop: `function bottomTop(element, container, rect, containerRect, offset) { return ~~(rect.bottom - containerRect.top + offset) }`\n\n  # bottom of the element hits the bottom of the viewport\n  bottomBottom: `function bottomBottom(element, container, rect, containerRect, offset) { return ~~(rect.bottom - containerRect.top - container.clientHeight + offset) }`\n\n  # bottom of the element hits the center of the viewport\n  bottomCenter: `function bottomCenter(element, container, rect, containerRect, offset) { return ~~(rect.bottom - containerRect.top - container.clientHeight/2 + offset) }`\n}\n\n.constant 'sparkActionProps', {\n\n  # When the up, down fns are called, `this` is the current keyFrame object and `o` is the action object\n  # therefore @element and @scope refer to the current element and it's scope\n\n  # fn reference that is called when scrolled down past keyframe\n  'onDown':\n    down: (o)-> if _.isString(o.val) then @scope.$eval(o.val)(@, 'onDown', o) else o.val(@, 'onDown', o)\n\n  # fn reference that is called when scrolled up past keyframe\n  'onUp':\n    up: (o)-> if _.isString(o.val) then @scope.$eval(o.val)(@, 'onUp', o) else o.val(@, 'onUp', o)\n\n  # class(es) added when scrolled down past keyframe,\n  'downAddClass':\n    down: (o)-> @element.addClass(o.val)\n\n  # class(es) added when scrolled up past keyframe,\n  'upAddClass':\n    up: (o)-> @element.addClass(o.val)\n\n  # class(es) removed when scrolled down past keyframe\n  'downRemoveClass':\n    down: (o)-> @element.removeClass(o.val)\n\n  # class(es) removed when scrolled up past keyframe\n  'upRemoveClass':\n    up: (o)-> @element.removeClass(o.val)\n\n  # broadcasts an event when scrolled down past keyframe\n  'downBroadcast':\n    down: (o)-> @scope.$broadcast(o.val, @)\n\n  # broadcasts an event when scrolled up past keyframe\n  'upBroadcast':\n    up: (o)-> @scope.$broadcast(o.val, @)\n\n  # emits an event when scrolled down past keyframe\n  'downEmit':\n    down: (o)-> @scope.$emit(o.val, @)\n\n  # emits an event when scrolled up past keyframe\n  'upEmit':\n    up: (o)-> @scope.$emit(o.val, @)\n}\n\n.service 'sparkSetup', [ '$interval', '$rootScope', ($interval, $rootScope) ->\n  int = 0\n  @enableInvalidationInterval = (delay = 1000) ->\n    $interval.cancel(int) if int\n    int = $interval (-> $rootScope.$broadcast 'sparkInvalidate'), delay, 0, false\n\n  @disableInvalidationInterval = -> $interval.cancel(int)\n\n  # enable/disable spark-scroll-animate\n  @disableSparkScrollAnimate = false\n\n  # enable/disable spark-scroll\n  @disableSparkScroll = false\n\n  # enable/disable logging\n  @debug = false\n  @\n]\n\n.service 'sparkId', ->\n  @elements = {}\n  @registerElement = (id, element) ->\n    @elements[id] = element\n  @\n\n.directive 'sparkId', [ 'sparkId', (sparkId)->\n  (scope, element, attr) ->\n    sparkId.registerElement(attr.sparkId, element)\n    scope.$on '$destroy', -> delete sparkId.elements[attr.sparkId]\n]\n\ndirectiveFn = ($window, $timeout, sparkFormulas, sparkActionProps, sparkAnimator, sparkId, sparkSetup) ->\n  (scope, element, attr) ->\n\n    hasAnimateAttr = attr.hasOwnProperty('sparkScrollAnimate')  # when using spark-scroll-animate directive animation is enabled\n    isAnimated = hasAnimateAttr\n    return if hasAnimateAttr and sparkSetup.disableSparkScrollAnimate\n    return if !hasAnimateAttr and sparkSetup.disableSparkScroll\n\n    # all callback-related vars\n    callback = false\n    prevRatio = 0\n    minScrollY = 0\n    maxScrollY = 0\n\n    animator = hasAnimateAttr && sparkAnimator.instance()\n    actor = isAnimated && animator.addActor({ context: element[0] })\n    y = 0\n    prevy = 0\n    scrollY = 0\n    animationFrame = AnimationFrame && new AnimationFrame()\n    updating = false\n\n    data = null\n    sparkData = null\n    actionFrames = []\n    actionFrameIdx = -1\n    container = document.documentElement\n\n    triggerElement = element\n\n    if attr.sparkTrigger\n      setTriggerElement = ->\n        if sparkId.elements[attr.sparkTrigger]\n          triggerElement = sparkId.elements[attr.sparkTrigger]\n          recalcFormulas() if recalcFormulas\n        else\n          # aggressively poll for the trigger element if we don't find it (because it's not ready yet)\n          $timeout setTriggerElement, 0, false\n      setTriggerElement()\n\n    actionsUpdate = ->\n\n      d = y - prevy\n\n      if d<0 and actionFrameIdx >= 0  # scroll up: don't apply on page load (only apply on page load for downward movement)\n        idx = if (actionFrameIdx >= actionFrames.length) then actionFrameIdx-1 else actionFrameIdx\n        while (idx >= 0 and y < actionFrames[idx])\n          c = sparkData[actionFrames[idx]]\n\n          for a, o of c.actions\n            for prop in o.props\n              actionProp = sparkActionProps[prop]\n              actionProp.up.call(c, o) if actionProp.up\n\n          actionFrameIdx = --idx\n\n      if d>=0 and actionFrameIdx < actionFrames.length  # scroll down: will apply on page load\n        idx = if (actionFrameIdx < 0) then 0 else actionFrameIdx\n        while (idx < actionFrames.length and y > actionFrames[idx])\n          c = sparkData[actionFrames[idx]]\n\n          for a, o of c.actions\n            for prop in o.props\n              actionProp = sparkActionProps[prop]\n              actionProp.down.call(c, o) if actionProp.down\n\n          actionFrameIdx = ++idx\n\n      prevy = y\n      updating = false\n\n\n    # update for spark-scroll-animate (sparkAnimator-based) animation\n    if attr.hasOwnProperty('sparkScrollEase')\n      update = ->\n        d = scrollY - y\n        ad = Math.abs(d)\n        doCallback() if callback\n        actionsUpdate() # sets updating = false\n        if ad < 1.5\n          y = scrollY\n          animator.update(y)\n        else\n          updating = true\n          y += if ad>8 then d*0.25 else (if d > 0 then 1 else -1) # ease the scroll\n          animator.update(~~y)\n          animationFrame.request(update)\n    else\n      update = ->\n        y = scrollY\n        animator.update(y)\n        doCallback() if callback\n        actionsUpdate() # sets updating = false\n\n\n    # @todo: we could use $parse instead for a more flexible solution but is the addt'l overhead worth it?\n    if attr.hasOwnProperty('sparkScrollCallback')\n      attr.$observe 'sparkScrollCallback', (v) ->\n        callback = scope.$eval(v)\n        callback = false unless _.isFunction(callback)\n        recalcMinMax() unless maxScrollY\n\n\n    recalcMinMax = ->\n      idx = 0\n      for scrY of sparkData\n        scrY = ~~ scrY\n        if idx++\n          if scrY > maxScrollY\n            maxScrollY = scrY\n          else if scrY < minScrollY\n            minScrollY = scrY\n        else\n          maxScrollY = minScrollY = scrY\n\n\n    doCallback = ->\n      ratio = Math.max(0, Math.min(y/(maxScrollY-minScrollY), 1))\n      callback ratio if ratio != prevRatio\n      prevRatio = ratio\n\n\n    recalcFormulas = ->\n      if sparkData\n        changed = false\n        rect = triggerElement[0].getBoundingClientRect()\n        containerRect = container.getBoundingClientRect()\n\n        for scrY, keyFrame of sparkData when keyFrame.formula\n          newScrY = keyFrame.formula.fn(triggerElement, container, rect, containerRect, keyFrame.formula.offset)\n          if newScrY != ~~scrY\n            changed = true\n            actor.moveKeyframe(~~scrY, newScrY) if keyFrame.anims and hasAnimateAttr # the ~~ is necessary :(\n            sparkData[newScrY] = keyFrame\n            delete sparkData[scrY]\n\n        if changed\n          recalcMinMax() if callback\n          actionFrames = []\n          actionFrames.push(~~scrY) for scrY, kf of sparkData when kf.actionCount\n          actionFrames.sort (a,b) -> a > b\n          onScroll()  # todo: this is checking scrollY unnecessarily\n          # @todo: now are we screwed if something was already passed by ?\n      else\n        parseData()\n        recalcFormulas() if sparkData\n\n\n    parseData = ->\n      return unless data\n\n      actor.removeAllKeyframes() if hasAnimateAttr\n\n      # element ease property\n      elmEase = data.ease || 'linear';\n      delete data.ease\n      animCount = 0\n\n      sparkData = {}\n      actionFrames = []\n\n      # this is used for formula comprehension... a possible performance improvement might\n      # forgo these calculations by adding some option or deferring calculation automatically\n      rect = triggerElement[0].getBoundingClientRect()\n      containerRect = container.getBoundingClientRect()\n\n      for scrY, keyFrame of data\n        keyFrame = _.clone(keyFrame)  # clone for cases when parseData fails and needs to be called again\n        actionCount = 0\n\n        # formula comprehension\n        # when scrollY first char is not a digit, we assume this is a formula\n        c = scrY.charCodeAt(0)\n        if (c < 48 or c > 57)\n          parts = scrY.match(/^(\\w+)(.*)$/)\n          formula =\n            fn: sparkFormulas[parts[1]],\n            offset: ~~parts[2]\n\n          scrY = formula.fn(triggerElement, container, rect, containerRect, formula.offset)\n          if sparkData[scrY]  # silent death for overlapping scrY's (assume that the element isn't ready)\n            console.log \"warning: spark-scroll failed to calculate formulas\", (attr.sparkScroll || attr.sparkScrollAnimate) if sparkSetup.debug\n            sparkData = null\n            return\n\n        # keyframe ease property\n        # (will override or fallback to element ease property)\n        ease = {}\n        kfEase = elmEase\n        if keyFrame.ease?\n          if angular.isObject(keyFrame.ease)\n            ease = keyFrame.ease\n          else\n            kfEase = keyFrame.ease\n          delete keyFrame.ease\n\n        for k,v of keyFrame\n          ksplit = k.split(',')\n\n          # put actions in actions sub-object\n          if sparkActionProps[ksplit[0]] # @todo: rigorous check ? (we assume that if the first action is legit then they all are)\n\n            keyFrame.actions or= { }  # could be more efficient to make actions an array\n            keyFrame.actions[k] = # action object\n              props: ksplit\n              val: v\n            delete keyFrame[k]\n            actionCount++\n\n            # put animations in anims sub-object\n          else # since it's not an action, assume it's an animation property\n\n            # comprehension of array-notation for easing\n            # (will override or fall back to keyframe ease propery as needed)\n            keyFrame.anims or= {}\n            v = [v, kfEase] unless angular.isArray(v)\n            o = {}\n            o[k] = v[1]\n            angular.extend(ease, o)\n\n            keyFrame.anims[k] = v[0]\n            delete keyFrame[k]\n\n        if keyFrame.anims && hasAnimateAttr\n          actor.keyframe(scrY, keyFrame.anims, ease)\n          animCount++\n\n        keyFrame.formula = formula\n        keyFrame.element = element\n        keyFrame.scope = scope\n        keyFrame.actionCount = actionCount\n\n        sparkData[scrY] = keyFrame\n        actionFrames.push(~~scrY) if actionCount\n\n      isAnimated = hasAnimateAttr && !! animCount\n\n      # actors can optionally expose this function to receive a notification that parsing completed\n      actor.finishedAddingKeyframes && actor.finishedAddingKeyframes() if isAnimated\n\n      actionFrames.sort (a,b) -> a > b\n      recalcMinMax() if callback\n\n      y = prevy = scrollY = $window.pageYOffset\n      update() if isAnimated\n      actionsUpdate()\n\n    watchCancel = scope.$watch attr[if hasAnimateAttr then 'sparkScrollAnimate' else 'sparkScroll'], (d) ->\n      return unless d\n      data = _.clone(d)   # clone for cases when parseData fails and needs to be called again\n\n      # useful in angular < v1.3 where one-time binding isn't available\n      if attr.sparkScrollBindOnce? then watchCancel()\n\n      parseData()\n    , true  # deep watch\n\n\n    nonAnimatedUpdate = ->\n      doCallback() if callback\n      actionsUpdate()\n\n\n    # respond to scroll event\n    onScroll = ->\n      scrollY = $window.pageYOffset\n\n      unless updating # debounced update\n        updating = true # in-case multiple scroll events can occur in one frame (possible?)\n        if isAnimated\n            animationFrame.request(update)\n        else\n          y = scrollY\n          animationFrame.request(nonAnimatedUpdate) # @todo: do these calls get queued between frames ?\n\n    # a simple leading:false debounce based on underscore\n    debounce = (func, wait) ->\n      timeout = 0\n      f = ->\n        context = this\n        args = arguments\n        later = ->\n          timeout = null\n          func.apply(context, args)\n\n        clearTimeout(timeout)\n        timeout = setTimeout(later, wait)\n\n      f.cancel = ->\n        clearTimeout(timeout)\n      f\n\n    onInvalidate = debounce(recalcFormulas, 100)\n\n    angular.element($window).on 'scroll', onScroll\n    angular.element($window).on 'resize', onInvalidate\n    scope.$on 'sparkInvalidate', onInvalidate\n\n    scope.$on '$destroy', ->\n      animator.removeActor(actor) if isAnimated\n      angular.element($window).off 'scroll', onScroll\n      angular.element($window).off 'resize', onInvalidate\n      onInvalidate.cancel()\n\n\nangular.module('gilbox.sparkScroll')\n  .directive 'sparkScroll',        ['$window', '$timeout', 'sparkFormulas', 'sparkActionProps', 'sparkAnimator', 'sparkId', 'sparkSetup', directiveFn]\n  .directive 'sparkScrollAnimate', ['$window', '$timeout', 'sparkFormulas', 'sparkActionProps', 'sparkAnimator', 'sparkId', 'sparkSetup', directiveFn]\n"]}